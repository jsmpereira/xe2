* DONE XE2 IDE notes
CLOSED: [2010-04-02 Fri 20:29]

CLON and XE2 have been updated with preliminary object serialization
support. This will be used to save game state to disk as well as to
load and save resources in the editor.

The relevant functions in CLON are #'serialize and #'deserialize. New
reserved method names :SERIALIZE and :DESERIALIZE have been
introduced. :SERIALIZE, if such a method is present, is invoked before
serialization. The object being serialized may use this hook to
pre-process its fields. :DESERIALIZE is likewise invoked (if present)
after reading the object from disk, and is used to recover from
deserialization. See worlds.lisp for an example. The reserved field
<EXCLUDED-FIELDS> is a list of field names (keyword symbols) which are
not serialized; typically these will be properly re-initialized by
the :DESERIALIZE method. See worlds.lisp for an example.

A "form" is an interactive spreadsheet-like graphical widget. Its main
purpose is to display, inspect, and edit XE2:=WORLD= objects composed
of cells, and is a sort of developer's version of the Viewport
widget. Some new methods and fields have been added to cells.el to
make XE2 cells work with the forms system.

A form views one "page" at a time; a page is a named XE2:=WORLD=
object. The set of all the pages in a given module is called the
Workbook, and within a given workbook different pages may link to one
another via navigable link cells. Linking to a non-existing page name
creates a new page with that name.

Pages are PAK resources with type :object. See
also #'clon:make-object-resource, #'clon:save-object-resource,
and #'load-object-resource in console.lisp.  Each page is stored in
one PAK file, containing a single resource with the serialized data
stored in the :DATA field of the resource record. Page-names must be
unique within a given XE2 module. A page's PAK file name is
{MODULENAME}/{PAGENAME}.pak , and for a given module these PAKs will
all be included by WORKBOOK.PAK, which is an automatically generated
PAK index linking to all the serialized page PAK files.

After these changes the typical {MODULENAME}.PAK will consist mainly
of inclusions of other PAKs. First the base resources (probably a
hand-edited PAK file) should be loaded. Then WORKBOOK.PAK.

Potential use cases:

 + Drawing game maps (or sections thereof) by hand
   - User links to a non-existing page called "/magical-grotto"
   - User follows link to newly created page
   - User resizes page to desired dimensions of the game scene
   - User selects objects as "paint color" and then clones objects onto the scene.
   - Level generation code pastes in world of cells from "/magical-grotto" page
     thus copying the location into a larger randomly generated map
 + Generating game maps procedurally, then editing by hand

In early tests a small game level (50x50 with relatively few objects)
serialized to a ~750K text file, which gzipped down to ~24K.
* CONS
*** DONE FIX no docs for exit
CLOSED: [2010-03-29 Mon 11:42]
*** TODO fix bad rook behavior
*** TODO fix no c-q during help mode
*** TODO mystery sector ! encounter early, but locked
*** TODO desctructible bricks for control rods.
*** TODO help and descriptions everywhere
*** TODO LOS enemies with [can-see-player self ]
*** TODO upgrade weapon power with chips and upgrade stations
*** TODO integrated tutorial?
*** TODO describe ship map menu with onscreen help
*** TODO storage sector
*** TODO reactor sector
**** TODO destroyable cores
**** TODO control rods
**** TODO destroyable drones
**** TODO defended cores
*** TODO TODO security sector play breakout using snake as paddle, pong ball is an item
*** TODO security crate
*** TODO corridor sector
*** TODO archive sector
*** TODO xiotank sector!
*** TODO overworld map whose output data target the area synth.
**** TODO overworld does not fill grid. only short intersecting horz/vert rows. 
**** unlocked levels are visitable, completed levels unlock any adjacent levels*
**** TODO data files (scores)
**** TODO a sector is completed when its objective is achieved
**** TODO when a section is completed the adjacent squares become visitable
**** TODO [#B] radiation areas
**** TODO [#B] dark areas
*** TODO [#B] CONTEXT SENSITIVE PUSH?POP uses 1 key? description key?xs
*** TODO [#A] fix input handling somehow
*** TODO [#A] bomb
*** TODO [#A] healing item
*** TODO [#A] macrovirii
*** TODO bases that spawn enemies/tentacles and require bombs to reach/destroy?
*** TODO xioceptor
*** TODO reactor core
*** TODO xentipedes
*** TODO scanners
*** TODO xiogond command units
*** TODO help screen
*** TODO tutorial
** XE2 CORE IMPROVEMENTS
*** TODO [#A] hold down shift/l2 to move a single space in xiotank?
*** TODO [#C] better error message about missing methods
*** TODO [#C] generate color schemes via CFG
*** TODO more documentation
*** TODO Improve slime support http://common-lisp.net/pipermail/slime-devel/2008-August/015390.html
*** TODO XE2 EASY SETUP FUNCTIONS (see util.lisp)

